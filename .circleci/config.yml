# Copy-pasted from circleci.com

# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-2.7.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      PROJECT_NAME: circle-ctl-test
      PROJECT_ID: circle-ctl-test
      CLUSTER_NAME: docker-hello-google-cluster
      CLOUDSDK_COMPUTE_ZONE: us-central1-f
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
    
    pre:
      - docker build -t us.gcr.io/${PROJECT_NAME}/hello:$CIRCLE_SHA1 .
      - docker tag us.gcr.io/${PROJECT_NAME}/hello:$CIRCLE_SHA1 us.gcr.io/${PROJECT_NAME}/hello:latest

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: lein deps

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}
        
      # run tests!
      - run: lein test

      # ready docker
      - run: sudo service docker stop && sudo nohup docker daemon -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock &

      # build image
      - run: sudo docker build -t brawl-haus-master:latest .

      # login
      - run: sudo docker login -u "_json_key" -p "$GCI_JSON_TOKEN" https://eu.gcr.io

      # publish
      - run: sudo docker push andrewzhurov/brawl-haus-master:latest

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
